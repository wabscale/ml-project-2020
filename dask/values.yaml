---
# nameOverride: dask
# fullnameOverride: dask

scheduler:
  name: scheduler
  image:
    repository: "daskdev/dask"
    tag: 2.24.0
    pullPolicy: IfNotPresent
    # See https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    pullSecrets:
    #  - name: regcred
  replicas: 1
  serviceType: "ClusterIP"
  # serviceType: "NodePort"
  # serviceType: "LoadBalancer"
  servicePort: 8786
  resources: {}
  #  limits:
  #    cpu: 1.8
  #    memory: 6G
  #  requests:
  #    cpu: 1.8
  #    memory: 6G
  tolerations: []
  affinity: {}
  nodeSelector: {}
  # serviceAccountName: ""

webUI:
  name: webui
  servicePort: 80
  ingress:
    enabled: true
    tls: false
    # secretName: dask-scheduler-tls
    hostname: scheduler.ml.nyu.lol
    annotations:
      # kubernetes.io/ingress.class: "nginx"
      # secretName: my-tls-cert
      # kubernetes.io/tls-acme: "true"

worker:
  name: worker
  image:
    repository: "daskdev/dask"
    tag: 2.24.0
    pullPolicy: IfNotPresent
    # dask_worker: "dask-cuda-worker"
    dask_worker: "dask-worker"
    pullSecrets:
    #  - name: regcred
  replicas: 6
  default_resources:  # overwritten by resource limits if they exist
    cpu: 4
    memory: "4G"
  env:
    - name: EXTRA_PIP_PACKAGES
      value: "nltk keras torch tensorflow sklearn dask-ml matplotlib pandas numpy --upgrade"
  #  - name: EXTRA_APT_PACKAGES
  #    value: build-essential openssl
  #  - name: EXTRA_CONDA_PACKAGES
  #    value: numba xarray -c conda-forge
  resources:
    limits:
      cpu: 8
      memory: 6G
      # nvidia.com/gpu: 1
    requests:
      cpu: 2
      memory: 2G
      # nvidia.com/gpu: 1
  tolerations: []
  nodeSelector: {}
  affinity: {}
  securityContext: {}
  # serviceAccountName: ""
  # port: ""
  #  this option overrides "--nthreads" on workers, which defaults to resources.limits.cpu / default_resources.limits.cpu
  #  use it if you need to limit the amount of threads used by multicore workers, or to make workers with non-whole-number cpu limits
  # threads_per_worker: 1 

jupyter:
  name: jupyter
  enabled: true
  ingress:
    enabled: true
    hostname: ml.nyu.lol
    annotations:
  image:
    repository: "daskdev/dask-notebook"
    tag: 2.24.0
    pullPolicy: IfNotPresent
    pullSecrets:
    #  - name: regcred
  replicas: 1
  # serviceType: "ClusterIP"
  serviceType: "NodePort"
  # serviceType: "LoadBalancer"
  servicePort: 80
  # This hash corresponds to the password 'dask'
  password: 'sha1:aae8550c0a44:9507d45e087d5ee481a5ce9f4f16f37a0867318c'
  persistent:
    enable: true
    accessMode: ReadWriteMany
    storageClass: "default"
    size: 2Gi
    path: /home/jovyan
    # run init container that will set the volume directory ownership to jovyan
    setPermissions: true
  healthcheck:
    enable: false
    delay: 5
    period: 5
  env:
  #  - name: EXTRA_CONDA_PACKAGES
  #    value: "numba xarray -c conda-forge"
     - name: EXTRA_PIP_PACKAGES
       value: "nltk keras torch tensorflow sklearn dask-ml matplotlib pandas numpy --upgrade"
  args:
  #  - "start.sh"
  #  - "jupyter"
  #  - "lab"
  extraConfig: |-
    # Extra Jupyter config goes here
    # E.g
    # c.NotebookApp.port = 8888
  resources:
   limits:
     cpu: 8
     memory: 8G
   requests:
     cpu: 4
     memory: 4G
  tolerations: []
  nodeSelector: {}
  affinity: {}
  securityContext: {}
  # serviceAccountName: ""
  # ingress:
  #   enabled: false
  #   tls: false
  #   # secretName: dask-jupyter-tls
  #   hostname: dask-jupyter.example.com
  #   annotations:
  #     # kubernetes.io/ingress.class: "nginx"
  #     # secretName: my-tls-cert
  #     # kubernetes.io/tls-acme: "true"
