{{ if .Values.jupyter.enabled -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "dask.fullname" . }}-jupyter
  labels:
    app: {{ template "dask.name" . }}
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: {{ template "dask.chart" . }}
    component: jupyter
spec:
  replicas: {{ .Values.jupyter.replicas }}
  selector:
    matchLabels:
      app: {{ template "dask.name" . }}
      release: {{ .Release.Name | quote }}
      component: jupyter
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "dask.name" . }}
        release: {{ .Release.Name | quote }}
        component: jupyter
    spec:
      imagePullSecrets:
        {{- toYaml .Values.jupyter.image.pullSecrets | nindent 8 }}
      {{- if (and .Values.jupyter.persistent.enable .Values.jupyter.persistent.setPermissions) }}
      initContainers:
        - name: {{ .Release.Name }}-jupyter-volume-permissions
          image: busybox:1.31.1
          command: ["sh", "-c", "chmod -Rv 755 /data/ && chown 1000:100 -R /data/"]
          volumeMounts:
            - name: jupyter-persistent
              mountPath: /data
      {{- end }}
      containers:
        - name: {{ template "dask.fullname" . }}-jupyter
          image: "{{ .Values.jupyter.image.repository }}:{{ .Values.jupyter.image.tag }}"
          imagePullPolicy: {{ .Values.jupyter.image.pullPolicy }}
          {{- if .Values.jupyter.args }}
          args:
            {{- toYaml .Values.jupyter.args | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 8888
          resources:
            {{- toYaml .Values.jupyter.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /usr/local/etc/jupyter
          {{- if .Values.jupyter.persistent.enable }}
            - name: jupyter-persistent
              mountPath: {{ .Values.jupyter.persistent.path }}
          {{- end }}
          env:
            - name: DASK_SCHEDULER_ADDRESS
              value: {{ template "dask.fullname" . }}-scheduler:{{ .Values.scheduler.servicePort }}
          {{- if .Values.jupyter.env }}
            {{- toYaml .Values.jupyter.env | nindent 12 }}
          {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "dask.fullname" . }}-jupyter-config
        {{- if .Values.jupyter.persistent.enable }}
        - name: jupyter-persistent
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-jupyter-persistent
        {{- end }}
    {{- with .Values.jupyter.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jupyter.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jupyter.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jupyter.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.jupyter.serviceAccountName }}
      serviceAccountName: {{ .Values.jupyter.serviceAccountName | quote }}
    {{- end }}
{{- if .Values.jupyter.persistent.enable }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-jupyter-persistent
spec:
  {{- if (not (eq .Values.jupyter.persistent.storageClass "default")) }}
  storageClassName: {{ .Values.jupyter.persistent.storageClass }}
  {{- end }}
  accessModes:
    {{- if .Values.jupyter.persistent.accessMode }}
    - {{ .Values.jupyter.persistent.accessMode }}
    {{- else }}
    - ReadWriteOnce
    {{- end }}
  resources:
    requests:
      storage: {{ .Values.jupyter.persistent.size }}
{{- end }}

{{- end }}
